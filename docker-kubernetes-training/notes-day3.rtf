{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 ArialMT;\f2\froman\fcharset0 Times-Roman;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww16360\viewh15460\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs36 \cf0 config maps\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\f1\fs28 \cf2 \expnd0\expndtw0\kerning0
kubectl create configmap my-config --from-file=05-1-simple-config.txt --from-literal=extra-param=\'91extra-value\'92 --from-literal=another-param=\'91another-value\'92 \
kubectl describe configmaps my-config\
kubectl apply -f ./05-2-kuard-config.yaml\
kubectl describe pods kuard-config\
kubectl port-forward kuard-config 8088:8080
\f2 \

\fs24 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs36 \cf0 \kerning1\expnd0\expndtw0 secrets\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\fs28 \cf0 kubectl create secret generic kuard-tls --from-file=kuard.crt --from-file=kuard.key\
kubectl describe secrets kuard-tls\
kubectl get secrets kuard-tls -o yaml\

\fs24 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs36 \cf0 stateful sets\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\fs28 \cf0 persistent volumes template used - for each replica a different volume will be create\
mongo examples:\
kubectl logs mongo-0 init-mongo
\fs24 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs36 \cf0 deployment and rollback\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\fs24 \cf0 \

\fs28 drupal upgrade example: name of the deployment should stay the same; roll out new image version\
0 downtime\
deployment strategies\
kubectl apply vs kubectl replace\
kubectl rollout history/status/undo/pause/resume\
kubernetes.io/change-cause: "Bart updated nginx to the latest"
\fs24 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs36 \cf0 authentication, authorisation, access control
\f1\b\fs24 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b0\fs28 \cf0 takes place in master node, in api-server\
ABAC/RBAC - RBAC more often used
\fs24 \
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\

\fs28 TASK\
\
get dockerfiles for drupal; let kubernetes pull the image from our repo\
push to own repo\
2 persisten volumes \
create deployment - drupal Deployment, Service -> LoadBalancer\
create a secret\

\b\fs24 \
}